const path=require("path"),async=require("async"),ClassCore=require(path.join(__dirname,"..","..","core","ClassCore.js")),mysql=require(path.join(__dirname,"..","..","config","db.js"));module.exports=class s extends ClassCore{createMessage(s,e){let t;const n={},u=s.body.receivers;mysql.query("INSERT INTO scheduleds SET ?",{at:s.body.date,content:s.body.content,tag:s.body.tag},(r,d)=>{if(r)return e.status(500).send(`Erreur C1 : ${r}`);n.success=!0,n.idmessage=d.insertId.toString(),n.messages=[];const a=/^\+/;async.each(u,(u,r)=>{a.test(u)?mysql.query("INSERT INTO scheduleds_numbers SET ?",{id_scheduled:d.insertId.toString(),number:u},(d,a)=>{if(d)return e.status(500).send(`Erreur C2 : ${d}`);t=new Date(s.body.date)>new Date?"4":"",n.messages.push({idsms:a.insertId.toString(),number:u,status:t}),r()}):(n.messages.push({number:u,status:"9"}),r())},s=>{return s?e.status(500).send(`Erreur C3 : ${s}`):e.status(200).json(n)})})}updateMessage(s,e){const t=s.params.id,n=s.body.content,u=s.body.date,r={};n&&""!==n&&(r.content=n),u&&""!==u&&(r.at=u),mysql.query("UPDATE scheduleds s SET ? WHERE ?",[r,{id:t}],(s,t)=>{return s?e.status(500).send(`Erreur Update1 : ${s}`):e.status(200).json(t)})}deleteMessage(s,e){const t=s.params.id;mysql.query("DELETE FROM scheduleds_numbers WHERE id = ?; DELETE FROM scheduleds WHERE id = ?",[t,t],s=>{return s?e.status(500).send(`Erreur DeleteMessage1 : ${s}`):e.status(200).send("Message SupprimÃ©")})}};